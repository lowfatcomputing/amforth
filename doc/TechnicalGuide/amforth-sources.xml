	<chapter id="Sources">
		<title>Source Organisation</title>
		<sect1 id="src_overview">
			<title>Overview</title>
			<para> amforth is written using the standard Atmel AVR 8 bit assembly
				language. That does not mean that every word is actually written in
				assembly language however. Most of the words are written in forth
				itself, but are precompiled into the assembler syntax. This solves
				the chicken-and-egg problem: how to compile the compiler words.
			</para>
			<para> The source code can be processed with both the AVR Studio and
				the linux avr assembler avra.</para>
			<para>
				amforth consists of a great number of small source files. Nearly all
				words are coded in their own source files. These files are organized
				with include files, named after the pattern
				<filename>dict*.inc</filename>.</para>
			<para>The include hierarchy is as follows: Top level is the application specific
			file (template.asm). It included the file (core/)<filename>amforth.asm</filename> only. This file includes
			the two (appl/) files <filename>dict_appl.inc</filename> for the low address words (RWW space) and the
			file <filename>dict_appl_core.inc</filename> for the high address space words (NRWW). These two include
			files use other <filename>dict*</filename> files and direct words defintion files. Any cross-references
			are solved by the assembler. The user needs to take care that the highest used address
			is within the flash address range, an assembler error message is generated in that case.
			</para>
			<para>
				Currently the following pre defined dict files exist:
				<table> <title>Source Filenames</title>
				 <tgroup cols="3"> 
				   <thead><row><entry>Filename</entry><entry>purpose</entry><entry>placement</entry></row></thead>
				   <tbody>
				     <row>
				       <entry>dict_minimum.inc</entry>
				       <entry>All basic words beyond the primitives.</entry>
				       <entry>Usually included via dict_appl.inc and placed in the
				       RWW section. If possible put it into the NRWW section however.</entry>
				     </row>
				     <row>
				       <entry>dict_mcu.inc</entry>
				       <entry>Microcontroller specific primitives.</entry>
				       <entry>It can be placed everywhere. Usually in dict_appl_core.inc.</entry>
				     </row>
				     <row>
				       <entry>dict_core.inc</entry>
				       <entry>All essential primitives.</entry>
				       <entry>Always near the inner interpreter (NRWW, dict_appl_core.inc).</entry>
				     </row>
				     <row>
				       <entry>dict_compiler</entry>
				       <entry>All Compiler words.</entry>
				       <entry>Usually part of the dict_appl.inc.</entry>
				     </row>
				     <row>
				       <entry>dict_usart</entry>
				       <entry>Usart Terminal IO words</entry>
				       <entry>Usually part of the dict_appl.inc.</entry>
				     </row>

				     <row>
				       <entry>dict_vm</entry>
				       <entry>Not-Yet proposed additional VM registers A and B</entry>
				       <entry>Usually part of the dict_appl.inc.</entry>
				     </row>
				     <row>
				       <entry>dict_wl</entry>
				       <entry>words dealing with word lists.</entry>
				       <entry>Usually part of the dict_appl.inc</entry>
				     </row>
				   </tbody>
				  </tgroup>
				</table>
				The order in which the files are included defines the search order
				and there location within the flash memory. Most words can be moved
				from one include file to another to optimize the flash usage.
			</para>
			<para>
				There are additional files:
				<filename>amforth.asm</filename>
				and
				<filename>macros.asm</filename>
				. The first one is the master file and the only one the application
				needs to include. The file
				<filename>macros.asm</filename>
				contains some useful assembler macros that make the source code
				easier to read.
				<filename>user.inc</filename> contains the layout of the system
				user area.
			</para>
		</sect1>
		<sect1 id="src_core_entry">
			<title>Core system</title>
			<para>
				The file
				<filename>amforth.asm</filename>
				is the core of amforth. Here is the startup code for the
				microcontroller, and the forth inner interpreter with the interrupt
				service routine. It includes the dictionary files.
			</para>
			<sect2 id="src_dict">
				<title>Dictionary files</title>
				<para>
					The dictionary files have two tasks: First they include the word
					definition files. Second, they determine each word's location in
					the resulting flash layout.
				</para>
				<para> There are a few words left out from the dictionary lists.
					These words are either not always needed or are some variants of
					existing words or simply cannot be included in the core system due
					to size limitations in the NRWW section with smaller atmegas. They
					are usually included by the application specific include file(s).
				</para>

				<sect3 id="src_dict_core"><title><filename>dict_core.inc</filename></title>
				<para>
					The file <filename>dict_core.inc</filename>
					contains all words for the NRWW flash section, Since the word
					<command>I!</command> cannot write to this address range, no 
					new words can be compiled to this section at runtime. Thus it 
					is advisable to include as many words as possible in
					<filename>dict_core.inc</filename> if the amount of writable 
					dictionary space is an issue. As a helper the file 
					<filename>dict_appl_core.inc</filename> can be used to place
					application specifiic words in the core area.
				</para>
				</sect3>
				<sect3 id="src_dict_minimum"><title><filename>dict_minimum.inc</filename></title>
				<para>
					A useful forth system needs in addition to the above at least the
					file <filename>dict_minimum.inc</filename>, which includes the 
					forth interpreter words.
				</para>
				</sect3>
				<sect3  id="src_dict_compiler"><title><filename>dict_compiler.inc</filename></title>
				<para>
					An almost complete forth system with a compiler gives the third
					include file: <filename>dict_compiler.inc</filename>.
				</para>
				</sect3>
				<sect3  id="src_dict_appl"><title><filename>dict_appl.inc</filename> and <filename>dict_appl_core.inc</filename></title>
				<para>
					Some words have their source files within the
					<filename>core/words</filename> directory but have to be included via the
					<filename>dict_appl.inc</filename> or <filename>dict_appl_core.inc</filename>
					files. These words may provide the hardware dependecies to access the
					amforth system. The serial line terminal is an example.
				</para>
				</sect3>
			</sect2>
			<sect2>
				<title>Device Settings</title>
				<para> Every Atmega has its own specific settings. They are based on
					the official include files provided by Atmel and define the
					important settings for the serial IO port (which port and which
					parameters), the interrupt vectors and some macros.</para>
				<para>Adapting another ATmega microcontroller is as easy as
					copy and edit an existing file from a similiar type.</para>
				<para>
					The last definition is a string with the device name in clear text.
					This string is used within the word
					<command>VER</command>
					.
				</para>
			</sect2>
		</sect1>
		<sect1>
			<title>Application Code</title>
			<para> Every build of amforth needs an application. There are a few
				sample applications, which can be used either directly (AVR
				Butterfly) or serve as a source for inspiration (template
				application).</para>
			<para>
				The structure is basically always the same. First the file
				<filename>macros.asm</filename>
				has to be included. After that some definitions need to done: The
				size of the Forth buffers, the CPU frequency, initial terminal
				settings etc. Then the device specific part needs to be included and
				as the last step the amforth core is included.
			</para>
			<para>
				For a comfortable development cycle the use of a build utility such
				as
				<command>make</command>
				or
				<command>ant</command>
				is recommended. The assembler needs a few settings and the proper
				order of the include directories.
			</para>
		</sect1>
	</chapter>
