    <chapter id="Roadmap">
        <title>Roadmap</title>
        <sect1 id="ANS94_WORDS">
            <title>More ANS94 Words</title>
            <para>
                There are a few missing words from the standard CORE
                word set. Many of them are related with string
                parameters, like <command>evaluate</command>.
                The difficulty arises from the fact, that the storage
                location of a string cannot be determined by simply
                looking at the address. A solution may be a state smart
                implementation with some helper words. If running
                interactively, these words may use RAM addresses, if
                called within a compiled word they use flash addresses.
                Not really smart however..
            </para>
            <para>
                Support for Blocks may be useful. It is not trivial to
                implement a standard 1KB block buffer on an Atmega with
                only 1KB RAM. It can be useful to deploy block sizes
                smaller than 1KB to match the native block sizes of the
                attached storage devices: serial EEPROM have e.g. 64
                bytes, SD-Cards have (usually) 512 bytes. Some rather simple code
                can be used from the library for I2C/TWI EEPROM modules
                with native block sizes.
            </para>
        </sect1>
        <sect1 id="MoreController">
            <title>More Controller Types</title>
            <para>
                Amforth can be used on any atemga with at least 8KB flash memory.
                A system with at least 16Kb is recommended. There are pre-generated 
                driver files from the XML part description files. 
                Atxmega's may work with a future version.
            </para>
        </sect1>
        <sect1 id="SUPPORT">
            <title>Support</title>
            <para>
                Amforth is not a commercial software. I hesitate to call
                it a product. Since you get all the source code for the
                system, you should be able to solve all problems
                yourself. On the other side I'm more than interested in
                any use of amforth and want to know what you're doing
                with it. If you find anything strange or faulty don't
                hesitate to mail it to the
                <ulink
                    url="mailto:amforth-devel@lists.sourceforge.net">
                    mailing list
                </ulink>
                .
            </para>
        </sect1>
        <sect1 id="Contributors">
            <title>Contributors</title>
            <para>
                amforth would not be the system it now is without the
                feedback and help from its users. I would like to thank
                all of them. The following people made an outstanding
                work to improve amforth (in no particular order): Milan
                Horkel, Ullrich Hoffmann, Michael Kalus, Karl Lunt,
                Bruce Wolk, Lubos Pekny, Erich W&auml;lde. But there are many more that
                helped by simply asking how to do some tasks.
            </para>
        </sect1>
    </chapter>
